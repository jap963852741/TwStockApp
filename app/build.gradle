apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.diffplug.spotless'

spotless {
    java {
        target '**/*.java'
    }
    kotlin {
        target "**/*.kt"
        ktlint('0.43.2').userData([
                'max_line_length': '300',
                'disabled_rules' : 'no-wildcard-imports'
        ])
    }
    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'
    }
    format 'xml', {
        target '**/*.xml'
    }
}

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.jap.twstockapp"
        minSdkVersion 25
        targetSdkVersion 32
        versionCode 4
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    lintOptions {

        checkReleaseBuilds false

    }
    buildTypes {
        release {
//            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //混淆开关
            minifyEnabled true
            // 是否zip对齐
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            // 是否打开debuggable开关
            debuggable false
            // 是否打开jniDebuggable开关
            jniDebuggable false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding{
        enabled true
    }
    viewBinding{
        enabled true
    }
}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "androidx.appcompat") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "1.+"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.work:work-runtime-ktx:2.7.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'
    implementation 'com.github.jap963852741:TwStockInformation:v1.0.25'
    implementation 'com.github.zagum:Android-SwitchIcon:1.4.0'
    implementation "io.reactivex.rxjava3:rxjava:3.0.0"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.white:progressview:1.0.1'
    implementation "com.github.skydoves:powerspinner:1.1.7"

    implementation 'cn.dreamtobe.percentsmoothhandler:library:0.1.1'
    implementation 'com.liulishuo.magicprogresswidget:library:1.1.1'

    // Dagger android
    implementation 'com.github.pengrad:jdk9-deps:1.0'
    implementation "com.google.dagger:dagger-android-support:2.14.1"
    androidTestImplementation project(path: ':app')
    kapt 'com.google.dagger:dagger-compiler:2.14.1'
    //check oom
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}